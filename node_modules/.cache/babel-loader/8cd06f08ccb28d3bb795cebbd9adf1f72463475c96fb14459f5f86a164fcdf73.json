{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/WEB DEVELOPMENT/Integrations-Assessment-Role-Task/src/Context/AppContext.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nconst AppContextProvider = props => {\n  _s();\n  // State\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [availablebanks, setAvailableBanks] = useState([]);\n  const [fetchBanksError, setFetchBankError] = useState(\"\");\n  const [selectedBank, setSelectedBank] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [userBankDetails, setUserBankDetails] = useState();\n  const [resolvedBankDetails, setREsolvedBankDetails] = useState();\n\n  // Loading states\n  const [isFetchingAvailableBanks, setIsFetchingAvailableBanks] = useState(false);\n  const [isResolvingBankDetails, setIsResolvingbankDetails] = useState(false);\n  const [isSendingReuest, setIsSendingRequest] = useState(false);\n\n  //   Fetch available banks with paystacks bank get API\n  const fetchBanks = () => {\n    setIsFetchingAvailableBanks(true);\n    setFetchBankError(\"\");\n    axios.get(\"https://api.paystack.co/bank?currency=NGN\", {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`\n      }\n    }).then(res => {\n      console.log(res, \"Banks\");\n      setAvailableBanks(res.data.data);\n      setIsFetchingAvailableBanks(false);\n    }).catch(err => {\n      console.log(err);\n      setFetchBankError(err.message);\n      setIsFetchingAvailableBanks(false);\n    });\n  };\n\n  // Set user bank\n  useEffect(() => {\n    if (availablebanks.length > 0 && selectedBank) {\n      const selectedbank = availablebanks.find(bank => {\n        return bank.name = selectedBank;\n      });\n      setUserBankDetails(selectedbank);\n    }\n  }, [selectedBank]);\n\n  //   console.log(userBankDetails, \"User bank\");\n\n  //   Resolve Account Number\n  const resolveAccountDetails = () => {\n    setIsResolvingbankDetails(true);\n    axios.get(`https://api.paystack.co/bank/resolve?account_number=${accountNumber}&bank_code=${userBankDetails.code}`, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n        Accept: \"application/json\"\n      }\n    }).then(res => {\n      setREsolvedBankDetails(res.data);\n      console.log(res, \"user details\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const generateUserReceipt = () => {\n    setIsSendingRequest(true);\n    axios.get(`https://api.paystack.co/bank/resolve?account_number=0001234567&bank_code=058`, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => console.log(res)).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      accountNumber,\n      setAccountNumber,\n      availablebanks,\n      setAvailableBanks,\n      fetchBanks,\n      isFetchingAvailableBanks,\n      fetchBanksError,\n      selectedBank,\n      setSelectedBank,\n      description,\n      setDescription,\n      resolveAccountDetails,\n      userBankDetails,\n      isResolvingBankDetails,\n      resolvedBankDetails\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContextProvider, \"jTb05RteOyf9had4u4HLLMQDML4=\");\n_c = AppContextProvider;\nexport default AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["axios","React","createContext","useEffect","useState","jsxDEV","_jsxDEV","AppContext","AppContextProvider","props","_s","accountNumber","setAccountNumber","availablebanks","setAvailableBanks","fetchBanksError","setFetchBankError","selectedBank","setSelectedBank","description","setDescription","userBankDetails","setUserBankDetails","resolvedBankDetails","setREsolvedBankDetails","isFetchingAvailableBanks","setIsFetchingAvailableBanks","isResolvingBankDetails","setIsResolvingbankDetails","isSendingReuest","setIsSendingRequest","fetchBanks","get","headers","Authorization","process","env","REACT_APP_PAYSTACK_TEST_SECRET_KEY","then","res","console","log","data","catch","err","message","length","selectedbank","find","bank","name","resolveAccountDetails","code","Accept","generateUserReceipt","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/WEB DEVELOPMENT/Integrations-Assessment-Role-Task/src/Context/AppContext.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\n\nexport const AppContext = createContext();\n\nconst AppContextProvider = (props) => {\n  // State\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [availablebanks, setAvailableBanks] = useState([]);\n  const [fetchBanksError, setFetchBankError] = useState(\"\");\n  const [selectedBank, setSelectedBank] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [userBankDetails, setUserBankDetails] = useState();\n  const [resolvedBankDetails, setREsolvedBankDetails] = useState();\n\n  // Loading states\n  const [isFetchingAvailableBanks, setIsFetchingAvailableBanks] =\n    useState(false);\n  const [isResolvingBankDetails, setIsResolvingbankDetails] = useState(false);\n  const [isSendingReuest, setIsSendingRequest] = useState(false);\n\n  //   Fetch available banks with paystacks bank get API\n  const fetchBanks = () => {\n    setIsFetchingAvailableBanks(true);\n    setFetchBankError(\"\");\n    axios\n      .get(\"https://api.paystack.co/bank?currency=NGN\", {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n        },\n      })\n      .then((res) => {\n        console.log(res, \"Banks\");\n        setAvailableBanks(res.data.data);\n        setIsFetchingAvailableBanks(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setFetchBankError(err.message);\n        setIsFetchingAvailableBanks(false);\n      });\n  };\n\n  // Set user bank\n  useEffect(() => {\n    if (availablebanks.length > 0 && selectedBank) {\n      const selectedbank = availablebanks.find((bank) => {\n        return (bank.name = selectedBank);\n      });\n      setUserBankDetails(selectedbank);\n    }\n  }, [selectedBank]);\n\n  //   console.log(userBankDetails, \"User bank\");\n\n  //   Resolve Account Number\n  const resolveAccountDetails = () => {\n    setIsResolvingbankDetails(true);\n    axios\n      .get(\n        `https://api.paystack.co/bank/resolve?account_number=${accountNumber}&bank_code=${userBankDetails.code}`,\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        setREsolvedBankDetails(res.data);\n        console.log(res, \"user details\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const generateUserReceipt = () => {\n    setIsSendingRequest(true);\n    axios\n      .get(\n        `https://api.paystack.co/bank/resolve?account_number=0001234567&bank_code=058`,\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        accountNumber,\n        setAccountNumber,\n        availablebanks,\n        setAvailableBanks,\n        fetchBanks,\n        isFetchingAvailableBanks,\n        fetchBanksError,\n        selectedBank,\n        setSelectedBank,\n        description,\n        setDescription,\n        resolveAccountDetails,\n        userBankDetails,\n        isResolvingBankDetails,\n        resolvedBankDetails,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContextProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}