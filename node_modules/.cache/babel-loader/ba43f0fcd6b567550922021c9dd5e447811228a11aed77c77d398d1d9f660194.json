{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/WEB DEVELOPMENT/Integrations-Assessment-Role-Task/src/Context/AppContext.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nconst AppContextProvider = props => {\n  _s();\n  // State\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [availablebanks, setAvailableBanks] = useState([]);\n  const [selectedBank, setSelectedBank] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [userBankDetails, setUserBankDetails] = useState();\n  const [resolvedBankDetails, setREsolvedBankDetails] = useState();\n  const [recepient, setRecepient] = useState();\n  const [amount, setAmount] = useState(\"\");\n\n  // Loading states\n  const [isFetchingAvailableBanks, setIsFetchingAvailableBanks] = useState(false);\n  const [isResolvingBankDetails, setIsResolvingbankDetails] = useState(false);\n  const [isSendingReuest, setIsSendingRequest] = useState(false);\n\n  //   Errors\n  const [fetchBanksError, setFetchBankError] = useState(\"\");\n  const [verifyAccountDetailsError, setVerifyBsnkDetsilsError] = useState(\"\");\n\n  //   Fetch available banks with paystacks bank get API\n  const fetchBanks = () => {\n    setIsFetchingAvailableBanks(true);\n    setFetchBankError(\"\");\n    axios.get(\"https://api.paystack.co/bank?currency=NGN\", {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`\n      }\n    }).then(res => {\n      console.log(res, \"Banks\");\n      setAvailableBanks(res.data.data);\n      setIsFetchingAvailableBanks(false);\n    }).catch(err => {\n      console.log(err);\n      setFetchBankError(err.message);\n      setIsFetchingAvailableBanks(false);\n    });\n  };\n\n  // Set user bank\n  useEffect(() => {\n    if (availablebanks.length > 0 && selectedBank) {\n      const selectedbank = availablebanks.find(bank => {\n        return bank.name === selectedBank;\n      });\n      setUserBankDetails(selectedbank);\n    }\n  }, [selectedBank]);\n  console.log(userBankDetails, \"User bank\");\n\n  //   Resolve Account Number\n  const resolveAccountDetails = () => {\n    if (accountNumber && userBankDetails) {\n      setIsResolvingbankDetails(true);\n      setVerifyBsnkDetsilsError(\"\");\n      axios.get(`https://api.paystack.co/bank/resolve?account_number=${accountNumber}&bank_code=${userBankDetails.code}`, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n          Accept: \"application/json\"\n        }\n      }).then(res => {\n        setIsResolvingbankDetails(false);\n        setREsolvedBankDetails(res.data.data.account_name);\n        console.log(res, \"user details\");\n      }).catch(err => {\n        setIsResolvingbankDetails(false);\n        console.log(err);\n        setVerifyBsnkDetsilsError(err.response.data.message);\n      });\n    }\n  };\n  const generateTransferRecepient = () => {\n    if (accountNumber && resolvedBankDetails && description) {\n      setIsSendingRequest(true);\n      axios.post(`https://api.paystack.co/transferrecipient`, {\n        type: \"nuban\",\n        name: resolvedBankDetails,\n        account_number: accountNumber,\n        bank_code: userBankDetails.code,\n        currency: \"NGN\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res, \"Recepient\");\n        setIsSendingRequest(false);\n        setRecepient(res.data.data);\n      }).catch(err => {\n        console.log(err);\n        setIsSendingRequest(false);\n      });\n    }\n    const initiateTransfer = () => {\n      axios.post(`https://api.paystack.co/transferrecipient`, {\n        source: \"balance\",\n        amount,\n        reference: v4(),\n        recipient: recepient === null || recepient === void 0 ? void 0 : recepient.recipient_code,\n        reason: description\n      }, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      accountNumber,\n      setAccountNumber,\n      availablebanks,\n      setAvailableBanks,\n      fetchBanks,\n      isFetchingAvailableBanks,\n      fetchBanksError,\n      selectedBank,\n      setSelectedBank,\n      description,\n      setDescription,\n      resolveAccountDetails,\n      userBankDetails,\n      isResolvingBankDetails,\n      resolvedBankDetails,\n      verifyAccountDetailsError,\n      generateTransferRecepient,\n      isSendingReuest\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContextProvider, \"zKcMWN5HswwU1IUDwagjsioS+5M=\");\n_c = AppContextProvider;\nexport default AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["axios","React","createContext","useEffect","useState","v4","jsxDEV","_jsxDEV","AppContext","AppContextProvider","props","_s","accountNumber","setAccountNumber","availablebanks","setAvailableBanks","selectedBank","setSelectedBank","description","setDescription","userBankDetails","setUserBankDetails","resolvedBankDetails","setREsolvedBankDetails","recepient","setRecepient","amount","setAmount","isFetchingAvailableBanks","setIsFetchingAvailableBanks","isResolvingBankDetails","setIsResolvingbankDetails","isSendingReuest","setIsSendingRequest","fetchBanksError","setFetchBankError","verifyAccountDetailsError","setVerifyBsnkDetsilsError","fetchBanks","get","headers","Authorization","process","env","REACT_APP_PAYSTACK_TEST_SECRET_KEY","then","res","console","log","data","catch","err","message","length","selectedbank","find","bank","name","resolveAccountDetails","code","Accept","account_name","response","generateTransferRecepient","post","type","account_number","bank_code","currency","initiateTransfer","source","reference","recipient","recipient_code","reason","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/WEB DEVELOPMENT/Integrations-Assessment-Role-Task/src/Context/AppContext.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { v4 } from \"uuid\";\n\nexport const AppContext = createContext();\n\nconst AppContextProvider = (props) => {\n  // State\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [availablebanks, setAvailableBanks] = useState([]);\n  const [selectedBank, setSelectedBank] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [userBankDetails, setUserBankDetails] = useState();\n  const [resolvedBankDetails, setREsolvedBankDetails] = useState();\n  const [recepient, setRecepient] = useState();\n  const [amount, setAmount] = useState(\"\");\n\n  // Loading states\n  const [isFetchingAvailableBanks, setIsFetchingAvailableBanks] =\n    useState(false);\n  const [isResolvingBankDetails, setIsResolvingbankDetails] = useState(false);\n  const [isSendingReuest, setIsSendingRequest] = useState(false);\n\n  //   Errors\n  const [fetchBanksError, setFetchBankError] = useState(\"\");\n  const [verifyAccountDetailsError, setVerifyBsnkDetsilsError] = useState(\"\");\n\n  //   Fetch available banks with paystacks bank get API\n  const fetchBanks = () => {\n    setIsFetchingAvailableBanks(true);\n    setFetchBankError(\"\");\n    axios\n      .get(\"https://api.paystack.co/bank?currency=NGN\", {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n        },\n      })\n      .then((res) => {\n        console.log(res, \"Banks\");\n        setAvailableBanks(res.data.data);\n        setIsFetchingAvailableBanks(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setFetchBankError(err.message);\n        setIsFetchingAvailableBanks(false);\n      });\n  };\n\n  // Set user bank\n  useEffect(() => {\n    if (availablebanks.length > 0 && selectedBank) {\n      const selectedbank = availablebanks.find((bank) => {\n        return bank.name === selectedBank;\n      });\n      setUserBankDetails(selectedbank);\n    }\n  }, [selectedBank]);\n\n  console.log(userBankDetails, \"User bank\");\n\n  //   Resolve Account Number\n  const resolveAccountDetails = () => {\n    if (accountNumber && userBankDetails) {\n      setIsResolvingbankDetails(true);\n      setVerifyBsnkDetsilsError(\"\");\n      axios\n        .get(\n          `https://api.paystack.co/bank/resolve?account_number=${accountNumber}&bank_code=${userBankDetails.code}`,\n          {\n            headers: {\n              Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n              Accept: \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          setIsResolvingbankDetails(false);\n          setREsolvedBankDetails(res.data.data.account_name);\n          console.log(res, \"user details\");\n        })\n        .catch((err) => {\n          setIsResolvingbankDetails(false);\n          console.log(err);\n          setVerifyBsnkDetsilsError(err.response.data.message);\n        });\n    }\n  };\n\n  const generateTransferRecepient = () => {\n    if (accountNumber && resolvedBankDetails && description) {\n      setIsSendingRequest(true);\n      axios\n        .post(\n          `https://api.paystack.co/transferrecipient`,\n          {\n            type: \"nuban\",\n            name: resolvedBankDetails,\n            account_number: accountNumber,\n            bank_code: userBankDetails.code,\n            currency: \"NGN\",\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res, \"Recepient\");\n          setIsSendingRequest(false);\n          setRecepient(res.data.data);\n        })\n        .catch((err) => {\n          console.log(err);\n          setIsSendingRequest(false);\n        });\n    }\n\n    const initiateTransfer = () => {\n      axios.post(\n        `https://api.paystack.co/transferrecipient`,\n        {\n          source: \"balance\",\n          amount,\n          reference: v4(),\n          recipient: recepient?.recipient_code,\n          reason: description,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n    };\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        accountNumber,\n        setAccountNumber,\n        availablebanks,\n        setAvailableBanks,\n        fetchBanks,\n        isFetchingAvailableBanks,\n        fetchBanksError,\n        selectedBank,\n        setSelectedBank,\n        description,\n        setDescription,\n        resolveAccountDetails,\n        userBankDetails,\n        isResolvingBankDetails,\n        resolvedBankDetails,\n        verifyAccountDetailsError,\n        generateTransferRecepient,\n        isSendingReuest,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContextProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}