{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/WEB DEVELOPMENT/Integrations-Assessment-Role-Task/src/Containers/InitiateTransfer/InitiateTransfer.js\";\nimport React from \"react\";\nimport Card from \"../../Components/Card/Card\";\nimport Layout from \"../../Components/Layout/Layout\";\nimport classes from \"./InitiateTransfer.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InitiateTransfer = () => {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Make a transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.transferForm,\n          children: /*#__PURE__*/_jsxDEV(Input\n          // onChange={(e) => setfirstname(e.target.value)}\n          // value={firstname}\n          // id=\"accountNumber\"\n          // onBlur={() => {\n          //   if (!firstname) {\n          //     setFirstnameIsValid(false);\n          //   } else {\n          //     setFirstnameIsValid(true);\n          //   }\n          // }}\n          , {\n            invalid: !firstnameIsValid,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstname\",\n              style: {\n                cursor: \"text\"\n              },\n              children: \"Legal First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = InitiateTransfer;\nexport default InitiateTransfer;\nvar _c;\n$RefreshReg$(_c, \"InitiateTransfer\");","map":{"version":3,"names":["React","Card","Layout","classes","jsxDEV","_jsxDEV","InitiateTransfer","children","className","container","fileName","_jsxFileName","lineNumber","columnNumber","transferForm","Input","invalid","firstnameIsValid","htmlFor","style","cursor","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/WEB DEVELOPMENT/Integrations-Assessment-Role-Task/src/Containers/InitiateTransfer/InitiateTransfer.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"../../Components/Card/Card\";\nimport Layout from \"../../Components/Layout/Layout\";\nimport classes from \"./InitiateTransfer.module.css\";\n\nconst InitiateTransfer = () => {\n  return (\n    <Layout>\n      <section className={classes.container}>\n        <Card>\n          <h3>Make a transfer</h3>\n          <div className={classes.transferForm}>\n            {/* Account number input */}\n            <Input\n              // onChange={(e) => setfirstname(e.target.value)}\n              // value={firstname}\n              // id=\"accountNumber\"\n              // onBlur={() => {\n              //   if (!firstname) {\n              //     setFirstnameIsValid(false);\n              //   } else {\n              //     setFirstnameIsValid(true);\n              //   }\n              // }}\n              invalid={!firstnameIsValid}\n            >\n              <label htmlFor=\"firstname\" style={{ cursor: \"text\" }}>\n                Legal First Name\n              </label>\n            </Input>\n          </div>\n        </Card>\n      </section>\n    </Layout>\n  );\n};\n\nexport default InitiateTransfer;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,OAAO,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,oBACED,OAAA,CAACH,MAAM;IAAAK,QAAA,eACLF,OAAA;MAASG,SAAS,EAAEL,OAAO,CAACM,SAAU;MAAAF,QAAA,eACpCF,OAAA,CAACJ,IAAI;QAAAM,QAAA,gBACHF,OAAA;UAAAE,QAAA,EAAI;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxBR,OAAA;UAAKG,SAAS,EAAEL,OAAO,CAACW,YAAa;UAAAP,QAAA,eAEnCF,OAAA,CAACU;UACC;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UAAA;YACAC,OAAO,EAAE,CAACC,gBAAiB;YAAAV,QAAA,eAE3BF,OAAA;cAAOa,OAAO,EAAC,WAAW;cAACC,KAAK,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cAAAb,QAAA,EAAC;YAEtD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAQ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEb,CAAC;AAACQ,EAAA,GA9BIf,gBAAgB;AAgCtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}