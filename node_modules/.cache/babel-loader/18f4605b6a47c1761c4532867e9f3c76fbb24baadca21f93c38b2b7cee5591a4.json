{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/WEB DEVELOPMENT/Integrations-Assessment-Role-Task/src/Context/AppContext.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nconst AppContextProvider = props => {\n  _s();\n  // State\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [availablebanks, setAvailableBanks] = useState([]);\n  const [selectedBank, setSelectedBank] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [userBankDetails, setUserBankDetails] = useState();\n  const [resolvedBankDetails, setREsolvedBankDetails] = useState();\n\n  // Loading states\n  const [isFetchingAvailableBanks, setIsFetchingAvailableBanks] = useState(false);\n  const [isResolvingBankDetails, setIsResolvingbankDetails] = useState(false);\n  const [isSendingReuest, setIsSendingRequest] = useState(false);\n\n  //   Errors\n  const [fetchBanksError, setFetchBankError] = useState(\"\");\n  const [verifyAccountDetailsError, setVerifyBsnkDetsilsError] = useState(\"\");\n\n  //   Fetch available banks with paystacks bank get API\n  const fetchBanks = () => {\n    setIsFetchingAvailableBanks(true);\n    setFetchBankError(\"\");\n    axios.get(\"https://api.paystack.co/bank?currency=NGN\", {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`\n      }\n    }).then(res => {\n      console.log(res, \"Banks\");\n      setAvailableBanks(res.data.data);\n      setIsFetchingAvailableBanks(false);\n    }).catch(err => {\n      console.log(err);\n      setFetchBankError(err.message);\n      setIsFetchingAvailableBanks(false);\n    });\n  };\n\n  // Set user bank\n  useEffect(() => {\n    if (availablebanks.length > 0 && selectedBank) {\n      const selectedbank = availablebanks.find(bank => {\n        return bank.name === selectedBank;\n      });\n      setUserBankDetails(selectedbank);\n    }\n  }, [selectedBank]);\n  console.log(userBankDetails, \"User bank\");\n\n  //   Resolve Account Number\n  const resolveAccountDetails = () => {\n    if (accountNumber && userBankDetails) {\n      setIsResolvingbankDetails(true);\n      setVerifyBsnkDetsilsError(\"\");\n      axios.get(`https://api.paystack.co/bank/resolve?account_number=${accountNumber}&bank_code=${userBankDetails.code}`, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n          Accept: \"application/json\"\n        }\n      }).then(res => {\n        setIsResolvingbankDetails(false);\n        setREsolvedBankDetails(res.data.data.account_name);\n        console.log(res, \"user details\");\n      }).catch(err => {\n        setIsResolvingbankDetails(false);\n        console.log(err);\n        setVerifyBsnkDetsilsError(err.response.data.message);\n      });\n    }\n  };\n  const generateTransferRecepient = () => {\n    if (accountNumber && resolvedBankDetails && description) {\n      setIsSendingRequest(true);\n      axios.get(`https://api.paystack.co/transferrecipient`, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n          \"Content-Type\": \"application/json\"\n        },\n        data: {\n          type: \"nuban\",\n          name: resolvedBankDetails,\n          account_number: accountNumber,\n          bank_code: userBankDetails.code,\n          currency: \"NGN\"\n        }\n      }).then(res => {\n        console.log(res, \"Recepient\");\n        setIsSendingRequest(true);\n      }).catch(err => console.log(err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      accountNumber,\n      setAccountNumber,\n      availablebanks,\n      setAvailableBanks,\n      fetchBanks,\n      isFetchingAvailableBanks,\n      fetchBanksError,\n      selectedBank,\n      setSelectedBank,\n      description,\n      setDescription,\n      resolveAccountDetails,\n      userBankDetails,\n      isResolvingBankDetails,\n      resolvedBankDetails,\n      verifyAccountDetailsError,\n      generateTransferRecepient\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContextProvider, \"b79BAuHRR09v/jOWcs9b3oj3CIw=\");\n_c = AppContextProvider;\nexport default AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["axios","React","createContext","useEffect","useState","jsxDEV","_jsxDEV","AppContext","AppContextProvider","props","_s","accountNumber","setAccountNumber","availablebanks","setAvailableBanks","selectedBank","setSelectedBank","description","setDescription","userBankDetails","setUserBankDetails","resolvedBankDetails","setREsolvedBankDetails","isFetchingAvailableBanks","setIsFetchingAvailableBanks","isResolvingBankDetails","setIsResolvingbankDetails","isSendingReuest","setIsSendingRequest","fetchBanksError","setFetchBankError","verifyAccountDetailsError","setVerifyBsnkDetsilsError","fetchBanks","get","headers","Authorization","process","env","REACT_APP_PAYSTACK_TEST_SECRET_KEY","then","res","console","log","data","catch","err","message","length","selectedbank","find","bank","name","resolveAccountDetails","code","Accept","account_name","response","generateTransferRecepient","type","account_number","bank_code","currency","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/WEB DEVELOPMENT/Integrations-Assessment-Role-Task/src/Context/AppContext.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\n\nexport const AppContext = createContext();\n\nconst AppContextProvider = (props) => {\n  // State\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [availablebanks, setAvailableBanks] = useState([]);\n  const [selectedBank, setSelectedBank] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [userBankDetails, setUserBankDetails] = useState();\n  const [resolvedBankDetails, setREsolvedBankDetails] = useState();\n\n  // Loading states\n  const [isFetchingAvailableBanks, setIsFetchingAvailableBanks] =\n    useState(false);\n  const [isResolvingBankDetails, setIsResolvingbankDetails] = useState(false);\n  const [isSendingReuest, setIsSendingRequest] = useState(false);\n\n  //   Errors\n  const [fetchBanksError, setFetchBankError] = useState(\"\");\n  const [verifyAccountDetailsError, setVerifyBsnkDetsilsError] = useState(\"\");\n\n  //   Fetch available banks with paystacks bank get API\n  const fetchBanks = () => {\n    setIsFetchingAvailableBanks(true);\n    setFetchBankError(\"\");\n    axios\n      .get(\"https://api.paystack.co/bank?currency=NGN\", {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n        },\n      })\n      .then((res) => {\n        console.log(res, \"Banks\");\n        setAvailableBanks(res.data.data);\n        setIsFetchingAvailableBanks(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setFetchBankError(err.message);\n        setIsFetchingAvailableBanks(false);\n      });\n  };\n\n  // Set user bank\n  useEffect(() => {\n    if (availablebanks.length > 0 && selectedBank) {\n      const selectedbank = availablebanks.find((bank) => {\n        return bank.name === selectedBank;\n      });\n      setUserBankDetails(selectedbank);\n    }\n  }, [selectedBank]);\n\n  console.log(userBankDetails, \"User bank\");\n\n  //   Resolve Account Number\n  const resolveAccountDetails = () => {\n    if (accountNumber && userBankDetails) {\n      setIsResolvingbankDetails(true);\n      setVerifyBsnkDetsilsError(\"\");\n      axios\n        .get(\n          `https://api.paystack.co/bank/resolve?account_number=${accountNumber}&bank_code=${userBankDetails.code}`,\n          {\n            headers: {\n              Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n              Accept: \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          setIsResolvingbankDetails(false);\n          setREsolvedBankDetails(res.data.data.account_name);\n          console.log(res, \"user details\");\n        })\n        .catch((err) => {\n          setIsResolvingbankDetails(false);\n          console.log(err);\n          setVerifyBsnkDetsilsError(err.response.data.message);\n        });\n    }\n  };\n\n  const generateTransferRecepient = () => {\n    if (accountNumber && resolvedBankDetails && description) {\n      setIsSendingRequest(true);\n      axios\n        .get(`https://api.paystack.co/transferrecipient`, {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_PAYSTACK_TEST_SECRET_KEY}`,\n            \"Content-Type\": \"application/json\",\n          },\n          data: {\n            type: \"nuban\",\n            name: resolvedBankDetails,\n            account_number: accountNumber,\n            bank_code: userBankDetails.code,\n            currency: \"NGN\",\n          },\n        })\n        .then((res) => {\n          console.log(res, \"Recepient\");\n          setIsSendingRequest(true);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        accountNumber,\n        setAccountNumber,\n        availablebanks,\n        setAvailableBanks,\n        fetchBanks,\n        isFetchingAvailableBanks,\n        fetchBanksError,\n        selectedBank,\n        setSelectedBank,\n        description,\n        setDescription,\n        resolveAccountDetails,\n        userBankDetails,\n        isResolvingBankDetails,\n        resolvedBankDetails,\n        verifyAccountDetailsError,\n        generateTransferRecepient,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContextProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}